{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOption/index.js","components/FeedbackOption/FeedbackOption.jsx","components/Statistics/Statistics.jsx","components/Statistics/index.js","components/Notification/Notification.jsx","components/Notification/index.js","App.js","index.js","components/FeedbackOption/FeedbackOption.module.css"],"names":["Section","title","children","className","FeedbackOption","onLeaveFeedback","name","style","button","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","defaultProps","Notification","message","App","state","addFeedback","e","setState","prevState","target","countTotalFeedback","Object","values","reduce","el","acc","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oRAUeA,G,MAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,oBAAIC,UAAU,QAAd,SAAuBF,IACtBC,O,gBCJUE,ECGQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACrB,qCACE,wBAAQC,KAAK,OAAOH,UAAWI,IAAMC,OAAQC,KAAK,SAASC,QAASL,EAApE,kBACA,wBAAQC,KAAK,UAAUH,UAAWI,IAAMC,OAAQC,KAAK,SAASC,QAASL,EAAvE,qBACA,wBAAQC,KAAK,MAAMH,UAAWI,IAAMC,OAAQC,KAAK,SAASC,QAASL,EAAnE,qBCNEM,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,+BACE,qBAAIb,UAAU,iBAAd,sBAAyCU,KACzC,qBAAIV,UAAU,iBAAd,mBAAsCS,KACtC,qBAAIT,UAAU,iBAAd,kBAAqCW,KACrC,qBAAIX,UAAU,iBAAd,oBAAuCY,KACvC,qBAAIZ,UAAU,iBAAd,gCAAmDa,EAAnD,WAKNL,EAAWM,aAAe,CACxBL,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAUPL,IC5BAA,ED4BAA,EE3BTO,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGhB,UAAU,eAAb,SAA6BgB,KAGvBD,IAEfA,EAAaD,aAAe,CAC1BE,QAAS,ICRID,QCKME,E,4MAInBC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,YAAc,SAACC,GACb,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAEG,OAAOpB,KAAOmB,EAAUF,EAAEG,OAAOpB,MAAQ,O,EAIhDqB,mBAAqB,WAEnB,OADYC,OAAOC,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAIC,GAAL,OAAaD,EAAKC,IAAK,I,EAItEC,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKd,MAAMT,KAAO,EAAKe,qBAAwB,M,uDAIlE,OACE,qCACE,cAAC,EAAD,CAAS1B,MAAM,6BAAf,SACE,cAAC,EAAD,CAAgBI,gBAAiB+B,KAAKd,gBAExC,cAAC,EAAD,CAASrB,MAAM,aAAf,SACGmC,KAAKT,qBACJ,cAAC,EAAD,CACEf,KAAMwB,KAAKf,MAAMT,KACjBC,QAASuB,KAAKf,MAAMR,QACpBC,IAAKsB,KAAKf,MAAMP,IAChBC,MAAOqB,KAAKT,qBACZX,mBAAoBoB,KAAKH,oCAGzB,cAAC,EAAD,CAAcd,QAAQ,+B,GAzCHkB,aAAZjB,EAEZH,aAAe,GCJxBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,kC","file":"static/js/main.13e30b2d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2 className=\"title\">{title}</h2>\n    {children}\n  </section>\n)\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired\n}","import FeedbackOption from './FeedbackOption';\n\nexport default FeedbackOption;","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './FeedbackOption.module.css';\n\nconst FeedbackOption = ({ onLeaveFeedback }) => (\n  <>\n    <button name=\"good\" className={style.button} type=\"button\" onClick={onLeaveFeedback}>Good</button>\n    <button name=\"neutral\" className={style.button} type=\"button\" onClick={onLeaveFeedback}>Neutral</button>\n    <button name=\"bad\" className={style.button} type=\"button\" onClick={onLeaveFeedback}>Bad</button>\n  </>\n)\n\nexport default FeedbackOption;\n\nFeedbackOption.propTypes = {\n  onFeedback: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul>\n      <li className=\"statisticsItem\">Neutral: {neutral}</li>\n      <li className=\"statisticsItem\">Good: {good}</li>\n      <li className=\"statisticsItem\">Bad: {bad}</li>\n      <li className=\"statisticsItem\">Total: {total}</li>\n      <li className=\"statisticsItem\">Positive feedback: {positivePercentage}%</li>\n    </ul>\n  )\n}\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  positivePercentage: 0,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired\n}\nexport default Statistics;\n\n","import Statistics from './Statistics';\n\nexport default Statistics;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p className=\"notification\">{message}</p>\n}\n\nexport default Notification;\n\nNotification.defaultProps = {\n  message: ''\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired\n}","import Notification from './Notification';\n\nexport default Notification;","import React, { Component } from 'react';\nimport './App.css';\nimport Section from './components/Section/Section';\nimport FeedbackOption from './components/FeedbackOption';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification'\n\nexport default class App extends Component {\n  static propTypes = {};\n  static defaultProps = {};\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  addFeedback = (e) => {\n    this.setState(prevState => ({\n      [e.target.name]: prevState[e.target.name] + 1,\n    }))\n  }\n\n  countTotalFeedback = () => {\n    let total = Object.values(this.state).reduce((el, acc) => el + acc, 0);\n    return total\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100)\n  }\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOption onLeaveFeedback={this.addFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}>\n            </Statistics>\n          ) : (\n              <Notification message=\"No feedback given\"></Notification>\n            )}\n        </Section>\n      </>\n    )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOption_button__2DOng\"};"],"sourceRoot":""}